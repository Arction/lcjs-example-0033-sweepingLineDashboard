(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,s)=>{const n=s(475),{lightningChart:a,Themes:i,emptyLine:r,AutoCursorModes:o,AxisTickStrategies:l,ColorHEX:h,SolidFill:c,PointShape:g}=n;fetch(document.head.baseURI+"examples/assets/0033/ecg.json").then((e=>e.json())).then((e=>{const t=[{name:"ECG-1",yMin:-2500,yMax:2500},{name:"ECG-2",yMin:-2500,yMax:2500},{name:"ECG-3",yMin:-2500,yMax:2500},{name:"ECG-4",yMin:-2500,yMax:2500},{name:"ECG-5",yMin:-2500,yMax:2500},{name:"ECG-6",yMin:-2500,yMax:2500}],s=a().Dashboard({numberOfColumns:1,numberOfRows:t.length}).setSplitterStyle(r);console.log(s);const n=s.getTheme(),i=new c({color:n.isDark?h("#000000"):h("#ffffff")}),f=t.map(((e,t)=>{const a=s.createChartXY({columnIndex:0,rowIndex:t}).setTitle(e.name).setTitlePosition("series-left-top").setAutoCursorMode(o.disabled).setSeriesBackgroundFillStyle(i).setMouseInteractions(!1).setSeriesBackgroundStrokeStyle(r),h=a.getDefaultAxisX().setTickStrategy(l.Empty).setStrokeStyle(r).setScrollStrategy(void 0).setInterval({start:0,end:15e3,stopAxisAfter:!1}),f=a.getDefaultAxisY().setStrokeStyle(r).setInterval({start:e.yMin,end:e.yMax}).setTickStrategy(l.Empty),y=a.addLineSeries({dataPattern:{pattern:"ProgressiveX"},automaticColorIndex:t}).setName(e.name).setStrokeStyle((e=>e.setThickness(2))).setEffect(!1),d=a.addRectangleSeries().setEffect(!1).add({x1:0,y1:0,x2:0,y2:0}).setFillStyle(i).setStrokeStyle(r).setMouseInteractions(!1),m=a.addLineSeries({dataPattern:{pattern:"ProgressiveX"},automaticColorIndex:t}).setName(e.name).setStrokeStyle((e=>e.setThickness(2))).setEffect(!1),x=a.addPointSeries({pointShape:g.Circle}).setPointFillStyle(new c({color:n.examples.highlightPointColor})).setPointSize(5).setEffect(!1);let S=!1;return[m,y].forEach((e=>{e.onHighlight((e=>{S||(S=!0,m.setHighlight(e),y.setHighlight(e),S=!1)}))})),{chart:a,seriesLeft:m,seriesRight:y,seriesOverlayRight:d,seriesHighlightLastPoints:x,axisX:h,axisY:f}}));let y=0;const d=new Array(t.length).fill(0).map((e=>[]));let m=window.performance.now(),x=0;const S=()=>{const s=window.performance.now(),n=Math.floor(1e3*(s-m)/1e3)-x;if(n>0){const s=[];for(let t=0;t<n;t++){const n=1*(x+t),a=(x+t)%e.length,i={x:n,y:e[a]};s.push(i)}(e=>{let s=0;for(let n=0;n<t.length;n+=1){const t=e[n],a=d[n],i=f[n],r=t.map((e=>({x:e.x%15e3,y:e.y})));s=Math.max(s,r[r.length-1].x);let o=0,l=!1;for(const e of r){const t=e.x<y;!0===t&&t!==l&&(o+=1),l=t}if(o>1)i.seriesRight.clear(),i.seriesLeft.clear(),a.length=0;else if(1===o){const e=[];for(const t of r)t.x>y?a.push(t):e.push(t);i.seriesRight.clear().add(a),i.seriesLeft.clear().add(e),a.length=0,a.push(...e)}else i.seriesLeft.add(r),a.push(...r);const h=[a.length>0?a[a.length-1]:r[r.length-1]];i.seriesHighlightLastPoints.clear().add(h)}const n=s+450;f.forEach((e=>{e.seriesOverlayRight.setDimensions({x1:0,x2:n,y1:e.axisY.getInterval().start,y2:e.axisY.getInterval().end})})),y=s})(new Array(t.length).fill(0).map((e=>s))),x+=n}requestAnimationFrame(S)};S()}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);