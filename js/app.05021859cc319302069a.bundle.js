(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,s)=>{const r=s(89),{lightningChart:i,Themes:a,emptyLine:n,AutoCursorModes:o,AxisTickStrategies:l,ColorHEX:h,SolidFill:c,PointShape:d}=r;fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"examples/assets/0033/ecg.json").then((e=>e.json())).then((e=>{const t=new Array(6).fill(0).map(((e,t)=>({name:`ECG-${t+1}`,yMin:-2500,yMax:2500}))),s=i({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({numberOfColumns:1,numberOfRows:t.length,theme:a[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setSplitterStyle(n),r=s.getTheme(),f=new c({color:r.isDark?h("#000000"):h("#ffffff")}),g=t.map(((e,t)=>{const i=s.createChartXY({columnIndex:0,rowIndex:t}).setTitle(e.name).setTitlePosition("series-left-top").setAutoCursorMode(o.disabled).setSeriesBackgroundFillStyle(f).setMouseInteractions(!1).setSeriesBackgroundStrokeStyle(n),a=i.getDefaultAxisX().setTickStrategy(l.Empty).setStrokeStyle(n).setScrollStrategy(void 0).setInterval({start:0,end:15e3,stopAxisAfter:!1}),h=i.getDefaultAxisY().setStrokeStyle(n).setInterval({start:e.yMin,end:e.yMax}).setTickStrategy(l.Empty),g=i.addLineSeries({dataPattern:{pattern:"ProgressiveX"},automaticColorIndex:t}).setName(e.name).setStrokeStyle((e=>e.setThickness(2))).setEffect(!1),m=i.addRectangleSeries().setEffect(!1),y=m.add({x1:0,y1:0,x2:0,y2:0}).setFillStyle(f).setStrokeStyle(n).setMouseInteractions(!1),S=i.addLineSeries({dataPattern:{pattern:"ProgressiveX"},automaticColorIndex:t}).setName(e.name).setStrokeStyle((e=>e.setThickness(2))).setEffect(!1),u=i.addPointSeries({pointShape:d.Circle}).setPointFillStyle(new c({color:r.examples.highlightPointColor})).setPointSize(5).setEffect(!1);let x=!1;return[S,g].forEach((e=>{e.onHighlight((e=>{x||(x=!0,S.setHighlight(e),g.setHighlight(e),x=!1)}))})),{chart:i,seriesLeft:S,seriesRight:g,seriesOverlayRight:m,figureOverlayRight:y,seriesHighlightLastPoints:u,axisX:a,axisY:h}}));let m=0,y=window.performance.now(),S=0;const u=()=>{const s=window.performance.now(),r=Math.floor(1e3*(s-y)/1e3)-S;if(r>0){const s=[];for(let t=0;t<r;t++){const r=1*(S+t),i=(S+t)%e.length,a={x:r,y:e[i]};s.push(a)}(e=>{let s=0;for(let r=0;r<t.length;r+=1){const t=e[r],i=g[r],a=t.map((e=>({x:e.x%15e3,y:e.y}))),n=a.length;s=Math.max(s,a[a.length-1].x);let o=0,l=!1;for(const e of a){const t=e.x<m;!0===t&&t!==l&&(o+=1),l=t}if(o>1)i.seriesRight.clear(),i.seriesLeft.clear();else if(1===o){let e=[],t=[];for(let s=0;s<n;s+=1)if(a[s].x<=m){e=a.slice(0,s),t=a.slice(s+1);break}i.seriesLeft.add(e);const s=i.seriesRight,r=i.seriesLeft;i.seriesLeft=s,i.seriesRight=r,i.seriesRight.setDrawOrder({seriesDrawOrderIndex:0}),i.seriesOverlayRight.setDrawOrder({seriesDrawOrderIndex:1}),i.seriesLeft.setDrawOrder({seriesDrawOrderIndex:2}),i.seriesLeft.clear(),i.seriesLeft.add(t)}else i.seriesLeft.add(a);const h=[a[a.length-1]];i.seriesHighlightLastPoints.clear().add(h)}const r=s+450;g.forEach((e=>{e.figureOverlayRight.setDimensions({x1:0,x2:r,y1:e.axisY.getInterval().start,y2:e.axisY.getInterval().end})})),m=s})(new Array(t.length).fill(0).map((e=>s))),S+=r}requestAnimationFrame(u)};u()}))}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);